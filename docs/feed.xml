<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.5.0">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2017-09-02T21:06:27+01:00</updated><id>/</id><title type="html">TITLE IN CONFIG</title><subtitle>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.
</subtitle><entry><title type="html">Static Website Generators: Whats and whys</title><link href="/the/cold/hard/start/2017/07/11/starting-a-website.html" rel="alternate" type="text/html" title="Static Website Generators: Whats and whys" /><published>2017-07-11T17:00:00+01:00</published><updated>2017-07-11T17:00:00+01:00</updated><id>/the/cold/hard/start/2017/07/11/starting-a-website</id><content type="html" xml:base="/the/cold/hard/start/2017/07/11/starting-a-website.html">&lt;h1 id=&quot;preamble&quot;&gt;Preamble&lt;/h1&gt;
&lt;p&gt;I’ll explore some of the static website generators I looked at before I picked Jekyll. However, I feel like I’ve cheated you, the reader, out of a good story, needless to say, if you’re a glass half full kind of person you’ll enjoy the adventure, I’m sure.&lt;/p&gt;

&lt;h1 id=&quot;why&quot;&gt;Why&lt;/h1&gt;
&lt;p&gt;Static site generators (SSG) allow you, the time savvy, post modern individual, to generate the boiler plate code using some, not so boiler plate code written by someone else. In essence, it saves you from doing the grunt work, letting you do the important stuff.&lt;/p&gt;

&lt;p&gt;To save you time, they typically have support for templates, themes and blogs. The generators will take a file written in some high level language, say markdown, convert it and place it within the template code. No longer are you working with the raw html. This way of doing things makes SSGs both powerful and flexible.&lt;/p&gt;

&lt;h1 id=&quot;criteria&quot;&gt;Criteria&lt;/h1&gt;
&lt;p&gt;The criteria was simple. Which ever It’d have to be well supported with a large community, opensource and easy to install. Much later did I decide that a blogging mechanism would be handy.&lt;/p&gt;</content><author><name></name></author><summary type="html">Preamble I’ll explore some of the static website generators I looked at before I picked Jekyll. However, I feel like I’ve cheated you, the reader, out of a good story, needless to say, if you’re a glass half full kind of person you’ll enjoy the adventure, I’m sure.</summary></entry><entry><title type="html">So You Wanna Look Clever: A Not So Formal Intro</title><link href="/the/cold/hard/start/2017/07/11/a-gentle-intro.html" rel="alternate" type="text/html" title="So You Wanna Look Clever: A Not So Formal Intro" /><published>2017-07-11T17:00:00+01:00</published><updated>2017-07-11T17:00:00+01:00</updated><id>/the/cold/hard/start/2017/07/11/a-gentle-intro</id><content type="html" xml:base="/the/cold/hard/start/2017/07/11/a-gentle-intro.html">&lt;p&gt;You’ve decided in the midsts of all the things not currently going on (I’ll be graduating in 7 days) that, you’ll start your career by making your second, first mark on the world (wide web). This post and the rest of the blog will cover how I got to whatever this will eventually look like and some extra bits.&lt;/p&gt;

&lt;p&gt;First, lets get through some formalities. I’m starting this blog to document my progress and understanding. I’ll try to keep the waffle relatively low but, the blogs’ secondary use is to improve my communication skills (at some point I’m sure it will magically get better). I’m going to be a Computer Science MSci graduate from the University of nottingham in 7 days, having spent a little too long in education. I’ve worked on a few things already, each of which has taught me I simply don’t know enough.&lt;/p&gt;</content><author><name></name></author><summary type="html">You’ve decided in the midsts of all the things not currently going on (I’ll be graduating in 7 days) that, you’ll start your career by making your second, first mark on the world (wide web). This post and the rest of the blog will cover how I got to whatever this will eventually look like and some extra bits.</summary></entry><entry><title type="html">Welcome to Jekyll!</title><link href="/jekyll/update/2017/07/10/welcome-to-jekyll.html" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2017-07-10T17:07:04+01:00</published><updated>2017-07-10T17:07:04+01:00</updated><id>/jekyll/update/2017/07/10/welcome-to-jekyll</id><content type="html" xml:base="/jekyll/update/2017/07/10/welcome-to-jekyll.html">&lt;p&gt;You’ll find this post in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;https://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><summary type="html">You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.</summary></entry></feed>